import React, { useState } from 'react'
import { Link, Navigate, useLocation } from 'react-router-dom'
import { User, AlertCircle, Loader } from 'lucide-react'
import { useAuth } from '../../contexts/AuthContext'
import TelegramLoginWidget from '../../components/common/TelegramLoginWidget'
import useAuthConfig from '../../hooks/useAuthConfig'
import styles from './LoginPage.module.css'

function LoginPage() {

  const [loading, setLoading] = useState(false)
  const [error, setError] = useState('')

  const { isAuthenticated } = useAuth()
  const location = useLocation()
  
  // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –µ–≥–æ
  if (isAuthenticated) {
    const from = location.state?.from?.pathname || '/'
    return <Navigate to={from} replace />
  }



  // –ë—ã—Å—Ç—Ä—ã–π –≤—Ö–æ–¥ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  const quickLogin = async (role) => {
    // –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ–ø–µ—Ä—å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Å—Ç–∞—Ä—ã–π –º–µ—Ç–æ–¥ —Ç–æ–ª—å–∫–æ –¥–ª—è –¥–µ–º–æ
    console.log(`Demo login for role: ${role}`)
    // –í —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –º–æ–∂–Ω–æ –±—ã–ª–æ –±—ã —Å–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–µ Telegram –∞–∫–∫–∞—É–Ω—Ç—ã
  }

  return (
    <div className={styles.loginContainer}>
      <div className={styles.loginCard}>
        <div className={styles.header}>
          <img src="/assets/Logo APPETIT.png" alt="APPETIT" className={styles.logo} />
          <h1>–í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É</h1>
          <p>
            –í–æ–π–¥–∏—Ç–µ —á–µ—Ä–µ–∑ Telegram –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
          </p>
        </div>

        {error && (
          <div className={styles.errorMessage}>
            <AlertCircle size={16} />
            {error}
          </div>
        )}

        {/* Telegram Login Widget */}
        <div className={styles.telegramSection}>
          <TelegramLoginWidget 
            className={styles.telegramWidget}
          />
          <p className={styles.telegramDescription}>
            –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –≤—ã—à–µ –¥–ª—è –≤—Ö–æ–¥–∞ —á–µ—Ä–µ–∑ –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç Telegram
          </p>
        </div>

        <div className={styles.divider}>
          <span>–∏–ª–∏</span>
        </div>



        {/* –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –≤—Ö–æ–¥ –¥–ª—è –¥–µ–º–æ */}
        <div className={styles.demoSection}>
          <p className={styles.demoTitle}>–î–µ–º–æ-–∞–∫–∫–∞—É–Ω—Ç—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:</p>
          <div className={styles.demoButtons}>
            <button onClick={() => quickLogin('admin')} disabled={loading}>
              üë®‚Äçüíº –ê–¥–º–∏–Ω
            </button>
            <button onClick={() => quickLogin('kitchen')} disabled={loading}>
              üë®‚Äçüç≥ –ö—É—Ö–Ω—è
            </button>
            <button onClick={() => quickLogin('courier')} disabled={loading}>
              üöó –ö—É—Ä—å–µ—Ä
            </button>
            <button onClick={() => quickLogin('client')} disabled={loading}>
              üë§ –ö–ª–∏–µ–Ω—Ç
            </button>
          </div>
        </div>

        <div className={styles.backToHome}>
          <Link to="/">‚Üê –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é</Link>
        </div>

        {/* –°—Å—ã–ª–∫–∞ –Ω–∞ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ Telegram –±–æ—Ç–∞ */}
        <div className={styles.botSetupInfo}>
          <p className={styles.setupTitle}>
            –î–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤:
          </p>
          <p className={styles.setupDescription}>
            –î–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ Telegram —Å–æ–∑–¥–∞–π—Ç–µ –±–æ—Ç–∞ —á–µ—Ä–µ–∑{' '}
            <a 
              href="https://t.me/botfather" 
              target="_blank" 
              rel="noopener noreferrer"
              className={styles.botFatherLink}
            >
              @BotFather
            </a>{' '}
            –∏ —É–∫–∞–∂–∏—Ç–µ —Ç–æ–∫–µ–Ω –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö —Å–∏—Å—Ç–µ–º—ã.
          </p>
        </div>
      </div>
    </div>
  )
}

export default LoginPage