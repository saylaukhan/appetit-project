from fastapi import FastAPI, HTTPException, Depends
from fastapi.middleware.cors import CORSMiddleware
from fastapi.staticfiles import StaticFiles
from contextlib import asynccontextmanager
import os
from pathlib import Path

from app.core.config import settings
from app.core.database import engine
from app.models import Base
from app.api.routes import api_router


@asynccontextmanager
async def lifespan(app: FastAPI):
    """Lifecycle events for the FastAPI application."""
    # Startup
    print("üöÄ Starting APPETIT Backend...")
    
    # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    async with engine.begin() as conn:
        await conn.run_sync(Base.metadata.create_all)
    
    print("üìä Database tables created successfully")
    print(f"üåê API Documentation: http://localhost:8000/docs")
    print(f"üîó Alternative docs: http://localhost:8000/redoc")
    
    yield
    
    # Shutdown
    print("üõë Shutting down APPETIT Backend...")
    await engine.dispose()


def create_application() -> FastAPI:
    """Create and configure the FastAPI application."""
    
    app = FastAPI(
        title="APPETIT API",
        description="""
        üçï **APPETIT MVP API** - –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–æ—Å—Ç–∞–≤–∫–∏ –µ–¥—ã
        
        ## –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
        
        * **–ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è**: –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∏ –≤—Ö–æ–¥ –ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞ —Å SMS
        * **–ú–µ–Ω—é**: –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏, –±–ª—é–¥–∞–º–∏ –∏ –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞–º–∏
        * **–ó–∞–∫–∞–∑—ã**: –ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª –æ—Ç —Å–æ–∑–¥–∞–Ω–∏—è –¥–æ –¥–æ—Å—Ç–∞–≤–∫–∏
        * **–†–æ–ª–∏**: –ö–ª–∏–µ–Ω—Ç, –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä, –ö—É—Ö–Ω—è, –ö—É—Ä—å–µ—Ä
        * **–ê–Ω–∞–ª–∏—Ç–∏–∫–∞**: –û—Ç—á–µ—Ç—ã –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º –∏ UTM-–º–µ—Ç–∫–∞–º
        * **–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥**: –ü—Ä–æ–º–æ–∫–æ–¥—ã, –±–∞–Ω–Ω–µ—Ä—ã, push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        
        ## –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏
        
        * FastAPI + SQLAlchemy
        * JWT –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è
        * SQLite –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
        * Firebase Cloud Messaging
        
        –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è API –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ üìö
        """,
        version="1.0.0",
        docs_url="/docs",
        redoc_url="/redoc",
        lifespan=lifespan,
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ OpenAPI
        openapi_tags=[
            {
                "name": "auth",
                "description": "–ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π",
            },
            {
                "name": "menu",
                "description": "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–µ–Ω—é, –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏ –∏ –±–ª—é–¥–∞–º–∏",
            },
            {
                "name": "orders",
                "description": "–°–æ–∑–¥–∞–Ω–∏–µ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞–º–∏",
            },
            {
                "name": "admin",
                "description": "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏",
            },
            {
                "name": "courier",
                "description": "–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –∫—É—Ä—å–µ—Ä–æ–≤",
            },
            {
                "name": "kitchen",
                "description": "–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –∫—É—Ö–Ω–∏ (KDS)",
            },
            {
                "name": "analytics",
                "description": "–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏ –æ—Ç—á–µ—Ç—ã",
            },
            {
                "name": "marketing",
                "description": "–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã",
            },
        ]
    )
    
    # CORS –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ - –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
    app.add_middleware(
        CORSMiddleware,
        allow_origins=[
            "http://localhost:3000",  # React dev server
            "http://localhost:3001",  # Vite dev server (–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –ø–æ—Ä—Ç)
            "http://localhost:5173",  # Vite dev server
            "http://127.0.0.1:3000",
            "http://127.0.0.1:3001",
            "http://127.0.0.1:5173"
        ],
        allow_credentials=True,  # –†–∞–∑—Ä–µ—à–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É cookies –∏ —Ç–æ–∫–µ–Ω–æ–≤
        allow_methods=["GET", "POST", "PUT", "PATCH", "DELETE", "OPTIONS"],
        allow_headers=["*"],
    )
    
    # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–æ—É—Ç–µ—Ä–æ–≤ API
    app.include_router(api_router, prefix="/api/v1")
    
    # –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã (–¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π, –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤)
    static_path = Path("static")
    static_path.mkdir(exist_ok=True)
    app.mount("/static", StaticFiles(directory=static_path), name="static")
    
    # –ö–æ—Ä–Ω–µ–≤–æ–π —ç–Ω–¥–ø–æ–∏–Ω—Ç
    @app.get("/", tags=["root"])
    async def root():
        return {
            "message": "üçï APPETIT API is running!",
            "version": "1.0.0",
            "docs": "/docs",
            "redoc": "/redoc",
            "status": "healthy"
        }
    
    # Health check —ç–Ω–¥–ø–æ–∏–Ω—Ç
    @app.get("/health", tags=["health"])
    async def health_check():
        return {
            "status": "healthy",
            "database": "connected",
            "version": "1.0.0"
        }
    
    return app


# –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
app = create_application()


if __name__ == "__main__":
    import uvicorn
    
    uvicorn.run(
        "main:app",
        host="0.0.0.0",
        port=8000,
        reload=True,
        log_level="info"
    )
