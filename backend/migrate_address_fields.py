#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª–µ–π –∞–¥—Ä–µ—Å–∞ –≤ —Ç–∞–±–ª–∏—Ü—É users
"""

import asyncio
import sys
import os
import sqlite3

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from app.core.config import settings

async def migrate_address_fields():
    """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª–µ–π –∞–¥—Ä–µ—Å–∞ –≤ —Ç–∞–±–ª–∏—Ü—É users"""
    try:
        print("üóÑÔ∏è  –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª–µ–π –∞–¥—Ä–µ—Å–∞ –≤ —Ç–∞–±–ª–∏—Ü—É users...")
        
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ SQLite –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        db_path = settings.DATABASE_URL.replace("sqlite+aiosqlite:///", "").replace("./", "")
        
        with sqlite3.connect(db_path) as conn:
            cursor = conn.cursor()
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–ª–æ–Ω–∫–∏
            cursor.execute("PRAGMA table_info(users)")
            existing_columns = [row[1] for row in cursor.fetchall()]
            
            # –°–ø–∏—Å–æ–∫ –Ω–æ–≤—ã—Ö –ø–æ–ª–µ–π –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
            new_fields = [
                ("address_city", "VARCHAR(100)"),
                ("address_street", "VARCHAR(200)"),
                ("address_entrance", "VARCHAR(10)"),
                ("address_floor", "VARCHAR(10)"),
                ("address_apartment", "VARCHAR(20)"),
                ("address_comment", "TEXT"),
                ("address_latitude", "REAL"),
                ("address_longitude", "REAL")
            ]
            
            # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—è, –∫–æ—Ç–æ—Ä—ã—Ö –µ—â–µ –Ω–µ—Ç
            for field_name, field_type in new_fields:
                if field_name not in existing_columns:
                    try:
                        cursor.execute(f"ALTER TABLE users ADD COLUMN {field_name} {field_type}")
                        print(f"  ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –ø–æ–ª–µ: {field_name}")
                    except sqlite3.Error as e:
                        print(f"  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø–æ–ª—è {field_name}: {e}")
                else:
                    print(f"  ‚è≠Ô∏è  –ü–æ–ª–µ {field_name} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            
            conn.commit()
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã
            cursor.execute("PRAGMA table_info(users)")
            columns = cursor.fetchall()
            
            print(f"\nüìã –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã users ({len(columns)} –ø–æ–ª–µ–π):")
            for col in columns:
                print(f"  - {col[1]} ({col[2]})")
                
        print("\n‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –ø–æ–ª–µ–π –∞–¥—Ä–µ—Å–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –º–∏–≥—Ä–∞—Ü–∏–∏: {e}")
        raise

if __name__ == "__main__":
    asyncio.run(migrate_address_fields())
