#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –±–∞–Ω–Ω–µ—Ä–æ–≤ APPETIT.
"""

import asyncio
import sys
import subprocess
import time
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ path
sys.path.append(str(Path(__file__).parent))


def run_command(command, description):
    """–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º."""
    print(f"\nüîß {description}...")
    try:
        result = subprocess.run(command, shell=True, capture_output=True, text=True, timeout=30)
        if result.returncode == 0:
            print(f"   ‚úÖ {description} - —É—Å–ø–µ—à–Ω–æ!")
            if result.stdout.strip():
                print(f"   üì§ –í—ã–≤–æ–¥: {result.stdout.strip()[:200]}...")
            return True
        else:
            print(f"   ‚ùå {description} - –æ—à–∏–±–∫–∞!")
            if result.stderr:
                print(f"   üì§ –û—à–∏–±–∫–∞: {result.stderr.strip()[:200]}...")
            return False
    except subprocess.TimeoutExpired:
        print(f"   ‚è±Ô∏è {description} - –ø—Ä–µ–≤—ã—à–µ–Ω —Ç–∞–π–º–∞—É—Ç!")
        return False
    except Exception as e:
        print(f"   üí• {description} - –∏—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
        return False


async def setup_banners():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∏—Å—Ç–µ–º—ã –±–∞–Ω–Ω–µ—Ä–æ–≤."""
    print("üéØ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∏—Å—Ç–µ–º—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–∞–Ω–Ω–µ—Ä–∞–º–∏ APPETIT...")
    
    # 1. –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–º–µ—Ä–æ–≤ –±–∞–Ω–Ω–µ—Ä–æ–≤
    print("\n1Ô∏è‚É£ –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–º–µ—Ä–æ–≤ –±–∞–Ω–Ω–µ—Ä–æ–≤...")
    try:
        from seed_banners import main as seed_main
        result = await seed_main()
        if result == 0:
            print("   ‚úÖ –ü—Ä–∏–º–µ—Ä—ã –±–∞–Ω–Ω–µ—Ä–æ–≤ —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        else:
            print("   ‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º—ã –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø—Ä–∏–º–µ—Ä–æ–≤ –±–∞–Ω–Ω–µ—Ä–æ–≤")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø—Ä–∏–º–µ—Ä–æ–≤: {e}")
        return False
    
    # 2. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API
    print("\n2Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –±–∞–Ω–Ω–µ—Ä–æ–≤...")
    try:
        from test_banners_api import main as test_main
        result = await test_main()
        if result == 0:
            print("   ‚úÖ API –±–∞–Ω–Ω–µ—Ä–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
        else:
            print("   ‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å API")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ API: {e}")
        return False
    
    return True


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è."""
    print("üöÄ –ë—ã—Å—Ç—Ä–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∏—Å—Ç–µ–º—ã –±–∞–Ω–Ω–µ—Ä–æ–≤ APPETIT...")
    print("=" * 60)
    
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É –±–∞–Ω–Ω–µ—Ä–æ–≤
        success = asyncio.run(setup_banners())
        
        if success:
            print("\n" + "=" * 60)
            print("üéâ –°–ò–°–¢–ï–ú–ê –ë–ê–ù–ù–ï–†–û–í –ì–û–¢–û–í–ê –ö –†–ê–ë–û–¢–ï!")
            print("\nüìã –ß—Ç–æ –¥–µ–ª–∞—Ç—å –¥–∞–ª—å—à–µ:")
            print("\n1Ô∏è‚É£ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞:")
            print("   python main.py")
            print("   –∏–ª–∏")
            print("   uvicorn main:app --reload --host 0.0.0.0 --port 8000")
            
            print("\n2Ô∏è‚É£ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –±–∞–Ω–Ω–µ—Ä–æ–≤:")
            print("   –û—Ç–∫—Ä–æ–π—Ç–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ: test_banners_demo.html")
            
            print("\n3Ô∏è‚É£ API Endpoints:")
            print("   ‚Ä¢ http://localhost:8000/docs - –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è API")
            print("   ‚Ä¢ http://localhost:8000/api/v1/marketing/banners - –≤—Å–µ –±–∞–Ω–Ω–µ—Ä—ã")
            print("   ‚Ä¢ http://localhost:8000/api/v1/admin/marketing - –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å")
            
            print("\n4Ô∏è‚É£ –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å:")
            print("   ‚úÖ –ú–æ–¥–µ–ª—å Banner —Å–æ–∑–¥–∞–Ω–∞ –∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∞")
            print("   ‚úÖ –°—Ö–µ–º—ã Pydantic –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã")
            print("   ‚úÖ –ü—É–±–ª–∏—á–Ω—ã–µ API endpoints —Ä–∞–±–æ—Ç–∞—é—Ç")
            print("   ‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ API endpoints –∑–∞—â–∏—â–µ–Ω—ã")
            print("   ‚úÖ –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ –∏ –∫–ª–∏–∫–æ–≤")
            print("   ‚úÖ –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –ø–æ–∑–∏—Ü–∏—è–º –∏ —Å—Ç–∞—Ç—É—Å—É")
            print("   ‚úÖ –í—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –ø–æ–∫–∞–∑–∞")
            print("   ‚úÖ –ü—Ä–∏–º–µ—Ä—ã –±–∞–Ω–Ω–µ—Ä–æ–≤ –¥–æ–±–∞–≤–ª–µ–Ω—ã")
            
            print("\n5Ô∏è‚É£ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–∞–Ω–µ–ª—å:")
            print("   ‚Ä¢ GET /admin/marketing - –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–º")
            print("   ‚Ä¢ GET /admin/marketing/banners - —Å–ø–∏—Å–æ–∫ –±–∞–Ω–Ω–µ—Ä–æ–≤")
            print("   ‚Ä¢ POST /admin/marketing/banners - —Å–æ–∑–¥–∞–Ω–∏–µ –±–∞–Ω–Ω–µ—Ä–∞")
            print("   ‚Ä¢ PUT /admin/marketing/banners/{id} - —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ")
            print("   ‚Ä¢ DELETE /admin/marketing/banners/{id} - —É–¥–∞–ª–µ–Ω–∏–µ")
            print("   ‚Ä¢ GET /admin/marketing/banners/{id}/stats - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
            
            print("\n6Ô∏è‚É£ –ü—É–±–ª–∏—á–Ω—ã–µ endpoints:")
            print("   ‚Ä¢ GET /marketing/banners - –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –±–∞–Ω–Ω–µ—Ä—ã")
            print("   ‚Ä¢ GET /marketing/banners/{position} - –ø–æ –ø–æ–∑–∏—Ü–∏–∏")
            print("   ‚Ä¢ GET /marketing/banners/featured/main - –≥–ª–∞–≤–Ω—ã–µ")
            print("   ‚Ä¢ GET /marketing/positions - –¥–æ—Å—Ç—É–ø–Ω—ã–µ –ø–æ–∑–∏—Ü–∏–∏")
            print("   ‚Ä¢ POST /marketing/banners/{id}/view - –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞")
            print("   ‚Ä¢ POST /marketing/banners/{id}/click - –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∫–ª–∏–∫–∞")
            
            print("\n" + "=" * 60)
            
            return 0
        else:
            print("\n‚ùå –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –æ—à–∏–±–∫–∞–º–∏")
            return 1
        
    except KeyboardInterrupt:
        print("\n\n‚ö†Ô∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        return 1
    except Exception as e:
        print(f"\nüí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        return 1


if __name__ == "__main__":
    exit_code = main()
    sys.exit(exit_code)