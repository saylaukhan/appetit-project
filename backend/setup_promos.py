"""
–£–ø—Ä–æ—â–µ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤
"""
import asyncio
from datetime import datetime, timedelta
from app.core.database import get_db_session
from app.models.promo_code import PromoCode, DiscountType
from sqlalchemy import select

async def setup_promo_codes():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤"""
    print("üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤...")
    
    async for db in get_db_session():
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥—ã
            result = await db.execute(select(PromoCode))
            existing = result.scalars().all()
            
            if existing:
                print(f"‚ÑπÔ∏è  –ù–∞–π–¥–µ–Ω–æ {len(existing)} –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤:")
                for promo in existing:
                    status = "‚úÖ –∞–∫—Ç–∏–≤–µ–Ω" if promo.is_active else "‚ùå –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω"
                    print(f"   - {promo.code}: {promo.name} ({status})")
                return
            
            # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –ø—Ä–æ–º–æ–∫–æ–¥—ã
            promos = [
                PromoCode(
                    code="WELCOME10",
                    name="–°–∫–∏–¥–∫–∞ –¥–ª—è –Ω–æ–≤—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤", 
                    description="10% —Å–∫–∏–¥–∫–∞ –Ω–∞ –ø–µ—Ä–≤—ã–π –∑–∞–∫–∞–∑",
                    discount_type=DiscountType.PERCENTAGE,
                    discount_value=10,
                    min_order_amount=2000,
                    max_discount_amount=500,
                    usage_limit=100,
                    usage_limit_per_user=1,
                    valid_until=datetime.now() + timedelta(days=30),
                    is_active=True
                ),
                PromoCode(
                    code="TESTPROMO",
                    name="–¢–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–º–æ–∫–æ–¥",
                    description="15% —Å–∫–∏–¥–∫–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è", 
                    discount_type=DiscountType.PERCENTAGE,
                    discount_value=15,
                    min_order_amount=1000,
                    max_discount_amount=300,
                    usage_limit=50,
                    usage_limit_per_user=3,
                    valid_until=datetime.now() + timedelta(days=365),
                    is_active=True
                ),
                PromoCode(
                    code="DELIVERY500",
                    name="–°–∫–∏–¥–∫–∞ –Ω–∞ –¥–æ—Å—Ç–∞–≤–∫—É",
                    description="500‚Ç∏ —Å–∫–∏–¥–∫–∞",
                    discount_type=DiscountType.FIXED,
                    discount_value=500,
                    min_order_amount=1500, 
                    usage_limit=200,
                    usage_limit_per_user=2,
                    valid_until=datetime.now() + timedelta(days=14),
                    is_active=True
                )
            ]
            
            for promo in promos:
                db.add(promo)
            
            await db.commit()
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ {len(promos)} –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
            await db.rollback()
        finally:
            await db.close()
            
if __name__ == "__main__":
    asyncio.run(setup_promo_codes())
