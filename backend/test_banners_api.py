#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –±–∞–Ω–Ω–µ—Ä–æ–≤ APPETIT.
"""

import asyncio
import sys
from pathlib import Path
import json

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ path
sys.path.append(str(Path(__file__).parent))

import httpx
from main import app

BASE_URL = "http://localhost:8000/api/v1"


async def test_banners_api():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –±–∞–Ω–Ω–µ—Ä–æ–≤."""
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –±–∞–Ω–Ω–µ—Ä–æ–≤...")
    
    async with httpx.AsyncClient(app=app, base_url=BASE_URL) as client:
        try:
            # 1. –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö –±–∞–Ω–Ω–µ—Ä–æ–≤
            print("\n1Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö –±–∞–Ω–Ω–µ—Ä–æ–≤...")
            response = await client.get("/marketing/banners")
            print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
            if response.status_code == 200:
                banners = response.json()
                print(f"   –ù–∞–π–¥–µ–Ω–æ –±–∞–Ω–Ω–µ—Ä–æ–≤: {len(banners)}")
                if banners:
                    print(f"   –ü–µ—Ä–≤—ã–π –±–∞–Ω–Ω–µ—Ä: {banners[0]['title']}")
            else:
                print(f"   –û—à–∏–±–∫–∞: {response.text}")
            
            # 2. –ü–æ–ª—É—á–µ–Ω–∏–µ –±–∞–Ω–Ω–µ—Ä–æ–≤ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            print("\n2Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è –≥–ª–∞–≤–Ω—ã—Ö –±–∞–Ω–Ω–µ—Ä–æ–≤...")
            response = await client.get("/marketing/banners/featured/main")
            print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
            if response.status_code == 200:
                main_banners = response.json()
                print(f"   –ì–ª–∞–≤–Ω—ã—Ö –±–∞–Ω–Ω–µ—Ä–æ–≤: {len(main_banners)}")
            else:
                print(f"   –û—à–∏–±–∫–∞: {response.text}")
            
            # 3. –ü–æ–ª—É—á–µ–Ω–∏–µ –±–∞–Ω–Ω–µ—Ä–æ–≤ –ø–æ –ø–æ–∑–∏—Ü–∏–∏
            print("\n3Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è –±–∞–Ω–Ω–µ—Ä–æ–≤ –ø–æ –ø–æ–∑–∏—Ü–∏–∏ 'featured'...")
            response = await client.get("/marketing/banners/featured")
            print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
            if response.status_code == 200:
                featured_banners = response.json()
                print(f"   –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã—Ö –±–∞–Ω–Ω–µ—Ä–æ–≤: {len(featured_banners)}")
            else:
                print(f"   –û—à–∏–±–∫–∞: {response.text}")
            
            # 4. –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–æ–∑–∏—Ü–∏–π
            print("\n4Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–æ–∑–∏—Ü–∏–π...")
            response = await client.get("/marketing/positions")
            print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
            if response.status_code == 200:
                positions = response.json()
                print(f"   –ù–∞–π–¥–µ–Ω–æ –ø–æ–∑–∏—Ü–∏–π: {len(positions.get('positions', []))}")
                for pos in positions.get('positions', []):
                    print(f"     ‚Ä¢ {pos['display_name']} ({pos['name']}): {pos['count']} –±–∞–Ω–Ω–µ—Ä–æ–≤")
            else:
                print(f"   –û—à–∏–±–∫–∞: {response.text}")
            
            # 5. –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å –±–∞–Ω–Ω–µ—Ä—ã)
            if 'banners' in locals() and banners:
                banner_id = banners[0]['id']
                print(f"\n5Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –±–∞–Ω–Ω–µ—Ä–∞ {banner_id}...")
                response = await client.post(f"/marketing/banners/{banner_id}/view")
                print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
                if response.status_code == 200:
                    result = response.json()
                    print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
                else:
                    print(f"   –û—à–∏–±–∫–∞: {response.text}")
                
                # 6. –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∫–ª–∏–∫–∞
                print(f"\n6Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∫–ª–∏–∫–∞ –ø–æ –±–∞–Ω–Ω–µ—Ä—É {banner_id}...")
                response = await client.post(f"/marketing/banners/{banner_id}/click")
                print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
                if response.status_code == 200:
                    result = response.json()
                    print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
                else:
                    print(f"   –û—à–∏–±–∫–∞: {response.text}")
            
            print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—É–±–ª–∏—á–Ω—ã—Ö API –±–∞–Ω–Ω–µ—Ä–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
            return 1
    
    return 0


async def test_admin_banners_api():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ–≥–æ API –±–∞–Ω–Ω–µ—Ä–æ–≤."""
    
    print("\nüîê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ–≥–æ API...")
    print("‚ÑπÔ∏è  –î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω—É–∂–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
    
    async with httpx.AsyncClient(app=app, base_url=BASE_URL) as client:
        try:
            # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ (–¥–æ–ª–∂–Ω—ã –ø–æ–ª—É—á–∏—Ç—å 401)
            print("\n1Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞–Ω–µ–ª–∏ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–∞ (–±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏)...")
            response = await client.get("/admin/marketing")
            print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
            if response.status_code == 401:
                print("   ‚úÖ –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ —Ç—Ä–µ–±—É–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é")
            else:
                print(f"   ‚ö†Ô∏è  –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å: {response.text}")
            
            print("\n2Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –±–∞–Ω–Ω–µ—Ä–æ–≤ –¥–ª—è –∞–¥–º–∏–Ω–∞ (–±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏)...")
            response = await client.get("/admin/marketing/banners")
            print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
            if response.status_code == 401:
                print("   ‚úÖ –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ —Ç—Ä–µ–±—É–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é")
            else:
                print(f"   ‚ö†Ô∏è  –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å: {response.text}")
            
            print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ–≥–æ API –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
            print("üí° –î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∞–¥–º–∏–Ω API –Ω—É–∂–Ω–æ:")
            print("   1. –°–æ–∑–¥–∞—Ç—å –∞–¥–º–∏–Ω —Ç–æ–∫–µ–Ω: python create_admin_token.py")
            print("   2. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–∫–µ–Ω –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ Authorization: Bearer <token>")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∞–¥–º–∏–Ω API: {e}")
            return 1
    
    return 0


async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è."""
    print("üéØ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –±–∞–Ω–Ω–µ—Ä–æ–≤ APPETIT...")
    
    try:
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—É–±–ª–∏—á–Ω—ã–µ endpoints
        result1 = await test_banners_api()
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ endpoints
        result2 = await test_admin_banners_api()
        
        if result1 == 0 and result2 == 0:
            print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
            print("\nüìã –î–æ—Å—Ç—É–ø–Ω—ã–µ endpoints –¥–ª—è –±–∞–Ω–Ω–µ—Ä–æ–≤:")
            print("   –ü—É–±–ª–∏—á–Ω—ã–µ:")
            print("     ‚Ä¢ GET /api/v1/marketing/banners - –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –±–∞–Ω–Ω–µ—Ä—ã")
            print("     ‚Ä¢ GET /api/v1/marketing/banners/{position} - –±–∞–Ω–Ω–µ—Ä—ã –ø–æ –ø–æ–∑–∏—Ü–∏–∏")
            print("     ‚Ä¢ GET /api/v1/marketing/banners/featured/main - –≥–ª–∞–≤–Ω—ã–µ –±–∞–Ω–Ω–µ—Ä—ã")
            print("     ‚Ä¢ GET /api/v1/marketing/positions - –¥–æ—Å—Ç—É–ø–Ω—ã–µ –ø–æ–∑–∏—Ü–∏–∏")
            print("     ‚Ä¢ POST /api/v1/marketing/banners/{id}/view - –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞")
            print("     ‚Ä¢ POST /api/v1/marketing/banners/{id}/click - –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∫–ª–∏–∫–∞")
            print("\n   –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ (—Ç—Ä–µ–±—É—é—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏):")
            print("     ‚Ä¢ GET /api/v1/admin/marketing - –ø–∞–Ω–µ–ª—å –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–∞")
            print("     ‚Ä¢ GET /api/v1/admin/marketing/banners - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∞–Ω–Ω–µ—Ä–∞–º–∏")
            print("     ‚Ä¢ POST /api/v1/admin/marketing/banners - —Å–æ–∑–¥–∞–Ω–∏–µ –±–∞–Ω–Ω–µ—Ä–∞")
            print("     ‚Ä¢ PUT /api/v1/admin/marketing/banners/{id} - —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ")
            print("     ‚Ä¢ DELETE /api/v1/admin/marketing/banners/{id} - —É–¥–∞–ª–µ–Ω–∏–µ")
            print("     ‚Ä¢ GET /api/v1/admin/marketing/banners/{id}/stats - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
            return 0
        else:
            print("\n‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏")
            return 1
        
    except Exception as e:
        print(f"\nüí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        return 1


if __name__ == "__main__":
    exit_code = asyncio.run(main())
    sys.exit(exit_code)