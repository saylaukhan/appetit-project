#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.
"""

import sqlite3
import os


def test_database_structure():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö."""
    db_path = "database.db"
    
    if not os.path.exists(db_path):
        print("‚úó –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return False
        
    try:
        conn = sqlite3.connect(db_path)
        cursor = conn.cursor()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É users
        cursor.execute("""
            SELECT name FROM sqlite_master 
            WHERE type='table' AND name='users';
        """)
        
        if not cursor.fetchone():
            print("‚úó –¢–∞–±–ª–∏—Ü–∞ users –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            return False
        
        print("‚úì –¢–∞–±–ª–∏—Ü–∞ users –Ω–∞–π–¥–µ–Ω–∞")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É
        cursor.execute("PRAGMA table_info(users)")
        columns_info = cursor.fetchall()
        columns = [col[1] for col in columns_info]
        
        print(f"–ö–æ–ª–æ–Ω–∫–∏ —Ç–∞–±–ª–∏—Ü—ã users: {', '.join(columns)}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–ª—é—á–µ–≤—ã—Ö –∫–æ–ª–æ–Ω–æ–∫
        required_columns = [
            'id', 'phone', 'name', 'hashed_password', 
            'telegram_id', 'role', 'is_active'
        ]
        
        missing = [col for col in required_columns if col not in columns]
        if missing:
            print(f"‚úó –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∫–æ–ª–æ–Ω–∫–∏: {', '.join(missing)}")
            return False
        
        print("‚úì –í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∫–æ–ª–æ–Ω–∫–∏ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω–¥–µ–∫—Å—ã
        cursor.execute("""
            SELECT name FROM sqlite_master 
            WHERE type='index' AND tbl_name='users';
        """)
        indexes = [idx[0] for idx in cursor.fetchall()]
        print(f"–ò–Ω–¥–µ–∫—Å—ã: {', '.join(indexes)}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Å—Ç–∞–≤–∫—É –¥–∞–Ω–Ω—ã—Ö
        try:
            cursor.execute("""
                INSERT OR REPLACE INTO users 
                (phone, name, hashed_password, role, telegram_id) 
                VALUES (?, ?, ?, ?, ?)
            """, ("+79999999999", "Test User", "hash123", "client", None))
            
            conn.commit()
            print("‚úì –¢–µ—Å—Ç –≤—Å—Ç–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –≤—Å—Ç–∞–≤–∏–ª–∏—Å—å
            cursor.execute("SELECT phone, name, telegram_id FROM users WHERE phone = ?", ("+79999999999",))
            result = cursor.fetchone()
            
            if result:
                print(f"‚úì –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã: {result}")
            else:
                print("‚úó –î–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –ø–æ—Å–ª–µ –≤—Å—Ç–∞–≤–∫–∏")
                return False
                
        except sqlite3.Error as e:
            print(f"‚úó –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—Å—Ç–∞–≤–∫–µ –¥–∞–Ω–Ω—ã—Ö: {e}")
            return False
        
        conn.close()
        print("‚úì –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞")
        return True
        
    except sqlite3.Error as e:
        print(f"‚úó –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –±–∞–∑–æ–π: {e}")
        return False


if __name__ == "__main__":
    print("–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    
    if test_database_structure():
        print("\nüéâ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ!")
        print("–û—Å–Ω–æ–≤–Ω—ã–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:")
        print("  ‚úì –î–æ–±–∞–≤–ª–µ–Ω–∞ –∫–æ–ª–æ–Ω–∫–∞ telegram_id")
        print("  ‚úì –ò—Å–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram API")
        print("  ‚úì –£–¥–∞–ª–µ–Ω—ã —Ñ–∞–π–ª—ã —Å–µ—Å—Å–∏–π")
        print("  ‚úì –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –±–∞–∑—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞")
    else:
        print("\n‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö")
        exit(1)