#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–∞–Ω–Ω–µ—Ä–æ–≤ –≤ —Å—Ç–∏–ª–µ —Å—Ç–æ—Ä–∏—Å–æ–≤ APPETIT.
"""

import asyncio
import sys
from datetime import datetime, timedelta
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ path
sys.path.append(str(Path(__file__).parent))

from sqlalchemy.ext.asyncio import AsyncSession
from sqlalchemy import select, delete
from app.core.database import engine, Base
from app.models.banner import Banner


async def update_banners_to_stories():
    """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–Ω–Ω–µ—Ä–æ–≤ –¥–ª—è –ø–æ–∫–∞–∑–∞ –∫–∞–∫ —Å—Ç–æ—Ä–∏—Å—ã."""
    
    async with AsyncSession(engine) as session:
        try:
            # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã, –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
            async with engine.begin() as conn:
                await conn.run_sync(Base.metadata.create_all)
            
            # –£–¥–∞–ª—è–µ–º –≤—Å–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –±–∞–Ω–Ω–µ—Ä—ã
            await session.execute(delete(Banner))
            
            # –ù–æ–≤—ã–µ –±–∞–Ω–Ω–µ—Ä—ã-—Å—Ç–æ—Ä–∏—Å—ã –≤ —Å—Ç–∏–ª–µ APPETIT
            story_banners = [
                {
                    "title": "–ì–æ—Ç–æ–≤–∏–º –±–µ–∑ —Å–≤–∏–Ω–∏–Ω—ã",
                    "description": "–•–∞–ª—è–ª—å–Ω–∞—è –µ–¥–∞ –ø–æ —Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã–º —Ä–µ—Ü–µ–ø—Ç–∞–º",
                    "image": None,
                    "link": None,
                    "position": "featured",
                    "sort_order": 1,
                    "is_active": True
                },
                {
                    "title": "–û—Å—Ç–æ—Ä–æ–∂–Ω–æ, –º–æ—à–µ–Ω–Ω–∏–∫–∏!",
                    "description": "–ë—É–¥—å—Ç–µ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã –ø—Ä–∏ –∑–∞–∫–∞–∑–µ",
                    "image": None,
                    "link": None,
                    "position": "featured",
                    "sort_order": 2,
                    "is_active": True
                },
                {
                    "title": "–ù–∞–º 10 –ª–µ—Ç",
                    "description": "–ü—Ä–∞–∑–¥–Ω—É–µ–º —é–±–∏–ª–µ–π –≤–º–µ—Å—Ç–µ —Å –≤–∞–º–∏",
                    "image": None,
                    "link": None,
                    "position": "featured",
                    "sort_order": 3,
                    "is_active": True
                },
                {
                    "title": "–ù–æ–≤–∏–Ω–∫–∞ –ß–∞–∫-—á–∞–∫",
                    "description": "–¢—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω–∞—è —Å–ª–∞–¥–æ—Å—Ç—å –ø–æ —Å–µ–º–µ–π–Ω–æ–º—É —Ä–µ—Ü–µ–ø—Ç—É",
                    "image": None,
                    "link": None,
                    "position": "featured",
                    "sort_order": 4,
                    "is_active": True
                },
                {
                    "title": "–ù–æ–≤–∏–Ω–∫–∞: –î–∞–ª–∞ –ë–∞—Ä–±–µ–∫—é",
                    "description": "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–æ–≤–æ–µ —Ñ–∏—Ä–º–µ–Ω–Ω–æ–µ –±–ª—é–¥–æ",
                    "image": None,
                    "link": None,
                    "position": "featured",
                    "sort_order": 5,
                    "is_active": True
                },
                {
                    "title": "–í –Ω–∞–ø–∏—Ç–∫–∞—Ö –Ω–æ–≤–∏–Ω–∫–∏",
                    "description": "–°–≤–µ–∂–∏–µ –ª–∏–º–æ–Ω–∞–¥—ã –∏ —Å–º—É–∑–∏",
                    "image": None,
                    "link": None,
                    "position": "featured",
                    "sort_order": 6,
                    "is_active": True
                },
                {
                    "title": "–ß–µ–±—É—Ä–µ–∫–∏ –ø–æ-–¥–æ–º–∞—à–Ω–µ–º—É",
                    "description": "–•—Ä—É—Å—Ç—è—â–∏–µ –∏ —Å–æ—á–Ω—ã–µ, –∫–∞–∫ —É –±–∞–±—É—à–∫–∏",
                    "image": None,
                    "link": None,
                    "position": "featured",
                    "sort_order": 7,
                    "is_active": True
                }
            ]
            
            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–µ –±–∞–Ω–Ω–µ—Ä—ã
            for banner_data in story_banners:
                banner = Banner(**banner_data)
                session.add(banner)
            
            await session.commit()
            
            print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–æ {len(story_banners)} –±–∞–Ω–Ω–µ—Ä–æ–≤-—Å—Ç–æ—Ä–∏—Å–æ–≤:")
            for banner_data in story_banners:
                print(f"   ‚Ä¢ {banner_data['title']}")
            
            print(f"\nüåê –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞ —Å–∞–π—Ç–µ:")
            print(f"   ‚Ä¢ http://localhost:3001 - –≥–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞")
            print(f"   ‚Ä¢ http://localhost:8000/docs - API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –±–∞–Ω–Ω–µ—Ä–æ–≤: {e}")
            await session.rollback()
            raise
        finally:
            await session.close()


async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è."""
    print("üéØ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–Ω–Ω–µ—Ä–æ–≤ –≤ —Å—Ç–∏–ª–µ —Å—Ç–æ—Ä–∏—Å–æ–≤ APPETIT...")
    
    try:
        await update_banners_to_stories()
        print("\nüéâ –ë–∞–Ω–Ω–µ—Ä—ã-—Å—Ç–æ—Ä–∏—Å—ã —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã!")
        
    except Exception as e:
        print(f"\nüí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        return 1
    
    finally:
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
        await engine.dispose()
    
    return 0


if __name__ == "__main__":
    exit_code = asyncio.run(main())
    sys.exit(exit_code)