import asyncio
import os
import sys
import json

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ sys.path
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

from app.core.database import get_db_session
from app.models.user import User, UserRole
from app.api.endpoints.users import get_users
from app.schemas.user import UserListResponse
from sqlalchemy import select

async def test_users_api():
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º API users endpoint...")
    
    async for db in get_db_session():
        try:
            # –°–æ–∑–¥–∞–µ–º mock admin –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            admin_user = User(
                id=999,
                name="Test Admin",
                phone="+77777777777",
                role=UserRole.ADMIN,
                is_active=True,
                hashed_password="test"
            )
            
            print("üìã –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
            
            # –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é API –Ω–∞–ø—Ä—è–º—É—é
            response = await get_users(
                page=1,
                per_page=20,
                search=None,
                current_user=admin_user,
                db=db
            )
            
            print(f"‚úÖ API –æ—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω!")
            print(f"üìä –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {response.total}")
            print(f"üìÑ –°—Ç—Ä–∞–Ω–∏—Ü: {response.total_pages}")
            print(f"üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–∞ —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ: {len(response.users)}")
            
            print("\nüë§ –î–µ—Ç–∞–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:")
            print("-" * 80)
            for user in response.users:
                print(f"ID: {user.id} | {user.name} | {user.phone} | {user.role} | {'–ê–∫—Ç–∏–≤–µ–Ω' if user.is_active else '–ù–µ–∞–∫—Ç–∏–≤–µ–Ω'}")
            
            break
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ API: {e}")
            import traceback
            traceback.print_exc()
            break

if __name__ == "__main__":
    asyncio.run(test_users_api())